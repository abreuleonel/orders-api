name: tests

on: [push, pull_request]

jobs:
  phpunit-mysql:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -ppassword"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo, pdo_mysql
          coverage: none

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: |
            **/vendor
            ~/.composer/cache
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Prepare env (write .env.testing explicitly)
        run: |
          # .env para comandos artisan
          cp .env.example .env
          php artisan key:generate --force

          # cria .env.testing do zero (MySQL service exposto em 127.0.0.1)
          cat > .env.testing <<'EOF'
          APP_ENV=testing
          APP_DEBUG=true

          DB_CONNECTION=mysql
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=testing
          DB_USERNAME=root
          DB_PASSWORD=password
          EOF

          # copia APP_KEY do .env para o .env.testing
          APP_KEY=$(grep '^APP_KEY=' .env | cut -d= -f2-)
          echo "APP_KEY=$APP_KEY" >> .env.testing

          echo "----- .env.testing -----"
          sed 's/DB_PASSWORD=.*/DB_PASSWORD=****/' .env.testing || true
          echo "------------------------"

          # limpa cache de config
          php artisan config:clear

      - name: Wait for MySQL (extra guard)
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -ppassword && break
            echo "MySQL not ready yet... ($i)"
            sleep 2
          done

      - name: Run migrations (testing)
        run: php artisan migrate --env=testing -q

      - name: Run tests
        run: php artisan test
